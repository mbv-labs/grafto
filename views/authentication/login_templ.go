// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package authentication

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/MBvisti/grafto/views"
	"github.com/MBvisti/grafto/views/internal/layouts"
)

func LoginForm(csrftoken string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div hx-target=\"this\" hx-swap=\"outerHTML\"><div class=\"py-3 flex items-center text-xs uppercase before:flex-[1_1_0%] before:border-t before:mr-6 \n                    after:flex-[1_1_0%] after:border-t after:ml-6 text-gray-200 before:border-gray-600 \n                    after:border-gray-600\">Or</div><form hx-post=\"/login\" action=\"/authenticate\" method=\"post\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = returnCsrfField(csrftoken).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"grid gap-y-4\"><div><label for=\"email\" class=\"block text-sm mb-2 text-white\">Email address</label><div class=\"relative\"><input id=\"email\" type=\"email\" name=\"email\" class=\"border py-3 px-4 block w-full rounded-md text-sm focus:border-blue-500 \n                                    focus:ring-blue-500 bg-gray-800 border-gray-700 text-gray-400\" required aria-describedby=\"email-error\"></div><p class=\"hidden text-xs text-red-600 mt-2\" id=\"email-error\">Please include a valid email address so we can get back to you</p></div><div><div class=\"flex justify-between items-center\"><label for=\"password\" class=\"block text-sm mb-2 text-white\">Password</label> <a class=\"text-sm text-blue-600 decoration-2 hover:underline font-medium\" href=\"/forgot-password\">Forgot password?</a></div><div class=\"relative\"><input type=\"password\" id=\"password\" name=\"password\" class=\"border py-3 px-4 block w-full rounded-md text-sm focus:border-blue-500 \n                                    focus:ring-blue-500 bg-gray-800 border-gray-700 text-gray-400\" required aria-describedby=\"password-error\"><div class=\"hidden absolute inset-y-0 right-0 flex items-center pointer-events-none pr-3\"><svg class=\"h-5 w-5 text-red-500\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 \n                                            0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4zm.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\"></path></svg></div></div><p class=\"hidden text-xs text-red-600 mt-2\" id=\"password-error\">8+ characters required</p></div><div class=\"flex items-center\"><div class=\"flex\"><input id=\"remember-me\" name=\"remember_me\" type=\"checkbox\" class=\"shrink-0 mt-0.5 rounded text-blue-600 pointer-events-none \n                                    focus:ring-blue-500 bg-gray-800 border-gray-700 checked:bg-blue-500 \n                                    checked:border-blue-500 focus:ring-offset-gray-800\"></div><div class=\"ml-3\"><label for=\"remember-me\" class=\"text-sm text-white\">Remember me</label></div></div><button type=\"submit\" class=\"py-3 px-4 inline-flex justify-center items-center gap-2 rounded-md border \n                            border-transparent font-semibold bg-blue-500 text-white hover:bg-blue-600 focus:outline-none \n                            focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all text-sm focus:ring-offset-gray-800\">Sign in</button></div></form></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func LoginSuccess() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div hx-get=\"/redirect?to=dashboard\" hx-trigger=\"load delay:1s\" class=\"m-20 flex flex-col\"><h2 hx-target=\"closest div\" class=\"text-green-400\">Authenticated, you'll be re-directed in 2 secs</h2></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

type LoginPageProps struct {
	EmailNotVerified     bool
	CouldNotAuthenticate bool
	CsrfToken            string
}

func LoginPage(data LoginPageProps, head views.Head) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var4 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<main class=\"w-full max-w-md mx-auto my-auto\"><div class=\"mt-7 border rounded-xl shadow-sm bg-gray-800 border-gray-700\"><div class=\"p-4 sm:p-7\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if data.EmailNotVerified {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<p class=\"my-2 text-red-600\">You're email haven't been verified yet</p>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			if data.CouldNotAuthenticate {
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<p class=\"my-2 text-red-600\">We could not authenticate you; wrong email or password.</p>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"text-center\"><h1 class=\"block text-2xl font-bold text-white\">Login</h1><p class=\"mt-2 text-sm text-gray-400\">Don't have an account yet? <a class=\"text-blue-600 decoration-2 hover:underline font-medium\" href=\"/user/create\">Register here</a></p></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = LoginForm(data.CsrfToken).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></main>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layouts.Base(head.Build()).Render(templ.WithChildren(ctx, templ_7745c5c3_Var4), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
