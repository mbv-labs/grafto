package authentication

import (
	"github.com/MBvisti/grafto/views/internal/layouts"
	"github.com/MBvisti/grafto/views"
)

type RegisterFormProps struct {
	NameInput       views.InputElementError
	EmailInput      views.InputElementError
	PasswordInput   views.InputElementError
	ConfirmPassword views.InputElementError
	CsrfToken       string
}

templ RegisterResponse(title, message string, hasError bool) {
	<div class="m-20 flex flex-col">
		<h2
			hx-target="closest div"
			if hasError {
				class="text-lg text-red-500"
			} else {
				class="text-lg text-green-400"
			}
		>
			{ title }
		</h2>
		<p
			if hasError {
				class="text-sm text-red-500"
			} else {
				class="text-sm text-green-400"
			}
		>{ message }</p>
		if hasError {
			<a
				href="/register"
				class="btn btn-accent mt-4 text-sm font-medium"
			>Try again</a>
		}
	</div>
}

templ inputField(inputType, name, oldValue string, isRequired, hasError bool, ) {
	<input
		type={ inputType }
		name={ name }
		class="py-3 px-4 block w-full border rounded-md text-sm focs:border-blue-500 focs:ring-blue-500 bg-gray-800 border-gray-700 text-gray-400"
		if isRequired {
			required
		}
		aria-describedby="email-error"
		if oldValue != "" {
			value={ oldValue }
		}
	/>
	if hasError {
		<div class="absolute inset-y-0 right-0 flex items-center pointer-events-none pr-3">
			<svg class="h-5 w-5 text-red-500" width="16" height="16" fill="currentColor" viewBox="0 0 16 16" aria-hidden="true">
				<path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4zm.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"></path>
			</svg>
		</div>
	}
}

// maybe add some response headers to navigate this?
templ RegisterForm(data RegisterFormProps) {
	<div hx-target="this" hx-swap="outerHTML" class="p-4 sm:p-7">
		<div class="text-center">
			<h1 class="block text-2xl font-bold text-white">Register User</h1>
			<p class="mt-2 text-sm text-gray-400">
				Already have an account?
				<a
					class="text-blue-600 decoration-2 hover:underline font-medium"
					href="/login"
				>
					Sign in
				</a>
			</p>
		</div>
		<div class="mt-5">
			<form hx-post="/register" method="post">
				<input type="hidden" name="gorilla.csrf.Token" value={ data.CsrfToken }/>
				<div class="grid gap-y-4">
					<div>
						<label for="email" class="block text-sm mb-2 text-white">User name</label>
						<div class="relative">
							@inputField("text", "user_name", data.NameInput.OldValue, true, data.NameInput.Invalid)
						</div>
					</div>
					<div>
						<div class="flex items center">
							<label for="email" class="block text-sm mb-2 text-white">Email address</label>
							if data.EmailInput.Invalid {
								<p class="ml-2 text-sm text-red-500">
									Email already registered; please use another.
								</p>
							}
						</div>
						<div class="relative">
							@inputField("email", "email", data.EmailInput.OldValue, true, data.EmailInput.Invalid)
						</div>
					</div>
					<div>
						<label for="password" class="block text-sm mb-2 text-white">Password</label>
						<div class="relative">
							<input
								type="password"
								id="password"
								name="password"
								class="py-3 px-4 block w-full border rounded-md text-sm focs:border-blue-500 focs:ring-blue-500 bg-gray-800 border-gray-700 text-gray-400"
								required
								aria-describedby="password-error"
								minlength="8"
							/>
							if data.PasswordInput.Invalid {
								<div class="absolute inset-y-0 right-0 flex items-center pointer-events-none pr-3">
									<svg
										class="h-5 w-5 text-red-500"
										width="16"
										height="16"
										fill="currentColor"
										viewBox="0 0 16 16"
										aria-hidden="true"
									>
										<path
											d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4zm.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"
										></path>
									</svg>
								</div>
							}
						</div>
					</div>
					<div>
						if data.ConfirmPassword.Invalid {
							<p class="block text-sm mb-2 text-red-500">{ data.ConfirmPassword.InvalidMsg }</p>
						}
						<label for="confirm-password" class="block text-sm mb-2 text-white">
							Confirm
							Password
						</label>
						<div class="relative">
							<input
								type="password"
								id="confirm-password"
								name="confirm_password"
								class="py-3 px-4 block w-full border border-gray-200 rounded-md text-sm focs:border-blue-500 focs:ring-blue-500 bg-gray-800 border-gray-700 text-gray-400"
								required
								aria-describedby="confirm-password-error"
								minlength="8"
							/>
							if data.ConfirmPassword.Invalid {
								<div class="absolute inset-y-0 right-0 flex items-center pointer-events-none pr-3">
									<svg
										class="h-5 w-5 text-red-500"
										width="16"
										height="16"
										fill="currentColor"
										viewBox="0 0 16 16"
										aria-hidden="true"
									>
										<path
											d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4zm.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"
										></path>
									</svg>
								</div>
							}
						</div>
					</div>
					<button
						type="submit"
						class="py-3 px-4 inline-flex jstify-center items-center gap-2 rounded-md border border-transparent font-semibold bg-blue-500 text-white hover:bg-blue-600 focs:outline-none focs:ring-2 focs:ring-blue-500 focs:ring-offset-2 transition-all text-sm focs:ring-offset-gray-800"
					>
						Register
					</button>
				</div>
			</form>
		</div>
	</div>
}

templ RegisterPage(data RegisterFormProps, head views.Head) {
	@layouts.Base(head.Build()) {
		<main class="w-full max-w-md mx-auto my-auto">
			<div class="mt-7 border rounded-xl shadow-sm bg-gray-800 border-gray-700">
				@RegisterForm(data)
			</div>
		</main>
	}
}
